Tabelas que as exclusões deve ser Controlada
Contrato {
    Exclusão do contrato só poderá ser feito, caso não esteja assinado ou cancelado(feito).
    Edição apenas permitidas caso não esteja assinado ou cancelado (feito)
    E a mudança é apenas do tipo de contrato, caso não esteja assinado e ou cancelado.
}
Tipo {

    Exclusão dos tipos, só pode ocorrer caso não haja contrato referenciando, caso entre em desuso, realizar a atualização do registro como obsoleto.(completo)
    Atualizção de arquivo apenas permitidas caso não tenha contrato assinado.(FEITO)

}
Usuário{
    Exclusão só ocorrerá, caso não haja contrato ativo, neste caso só poderá desabilitar este usuário.(feito)
    Edição livre.(feito)
}
Ativo {
    não realizar a exclusão de um ativo após a criação de um contrato. Recomendado neste caso apenas mudar o estado do ativo para fora de operação.(feito)
}
Status{
    Na exclusão de um estado avisa ao usuário que todos os ativos que consta aquele stauts ficaram com o valor nulo.(feito)
}

*** Controls que utiliza do segundo parâmentro do método load da classe Repository(RESOLVIDO)
- AtivoList
- TipoList
- UsuarioForm

*** Criar método join na classe Repository que faz a junção simples de tabelas (FEITO)
*** Adicionar o trait de reload em todas as controls de listagem(Feito)
*** Criar a trait de delete e adicionar em todas as controlers(FEITO)
*** Ajeitar o delete de Status não permitir caso já exista ativo com aquele status e acertar o formulário no cadastro de contrato para mudança de status do ativo.(FEITO)
*** Remover a classe que faz a cláusula de junção, popis a mesma apresenta uma falha de segurança(SQLInjection) (FEITO)
*** Adicionar a listagem de Contratos em Ativos e criar a listagem de contratos genérica(FEITO)
*** Criar a View de Contrato(FEITO)
*** Adicionar o link para ver listagem de contratos no lado do usuário e ativo(FEITO)
*** Criar paginação(criado a lista de páginas, faltando replicar em todas as listagens)